amends "@pkl.impl.ghactions/PklCI.pkl"

import "@gha/actions/Common.pkl"
import "@gha/actions/Setup.pkl"
import "@gha/actions/Artifact.pkl"
import "@gha/Workflow.pkl"

local baseJob: Workflow.Job = new {
  `runs-on` = "ubuntu-latest"
  steps {
    new Common.Checkout {
      // full checkout (needed for spotless)
      fetchDepth = 0
    }
    new Setup.Java {
      javaVersion = "17"
      distribution = "temurin"
      cache = "gradle"
    }
    new {
      name = "Run tests"
      // TODO: figure out why this needs to be run twice.
      // Without this, completion tests fail (for example, see https://app.circleci.com/pipelines/github/apple/pkl-intellij/126/workflows/7de1355e-6b5a-4502-b71f-30d6ae42900e/jobs/245/tests)
      // language=bash
      run = """
        # revert GHA's default `set -e` to prevent process exit from the first failure
        set +e
        ./gradlew check || ./gradlew check
        """
    }
    new Artifact.Upload {
      name = "Upload test report HTML"
      artifactName = "test-reports-html"
      path = "build/reports/tests/**/*"
      `if` = "!cancelled()"
    }
  }
}


testReports {
  junit {
    "build/test-results/**/*.xml"
  }
}

local buildAndTest: Workflow = new {
  jobs {
    ["build-and-test"] = (baseJob) {
      name = "Build and test"
    }
  }
}

build = buildAndTest

prb = buildAndTest

main = buildAndTest

release {
  jobs {
    ["publish"] = (baseJob) {
      name = "Release"
      permissions {
        contents = "write"
      }
      steps {
        new {
          name = "Run gradle publish"
          run = "./gradlew -DreleaseBuild=true publish"
        }
        new {
          name = "Create GitHub release"
          env {
            ["GH_TOKEN"] = "${{ github.token }}"
            ["TAG_NAME"] = "${{ github.ref_name }}"
          }
          // language=bash
          run = #"""
            echo "Preparing updatePlugins.xml"
            sed -i -e 's/#version#/'${TAG_NAME}'/g' release/updatePlugins.xml

            echo "Creating release"
            gh release create ${TAG_NAME} \
              --title "${TAG_NAME}" \
              --target "${{ github.sha }}" \
              --verify-tag \
              --notes "Release notes: https://pkl-lang.org/intellij/current/changelog.html#release-${TAG_NAME}" \
              --repo "${{ github.repository }}" \
              release/*.*
            """#
        }
      }
    }
  }
}
